
# Exclamation point (!) means the field is required
type Dog {
    id: ID!
    name: String!
    breed: String!
    origin: String!
}

#The schema should match the fields found in the Dog entity.
#Add the following query operations:
#findDogBreeds
#findDogBreedById
#findAllDogNames
#Add the following mutators:
#deleteDogBreed
#updateDogName


#Using GraphQL, the user will be able to specify
#which fields they want from a query.
#So, simply by adding the queries for find all dogs
#(where they can request only breed, or only names),
#and finding a dog by id (where they can request just the breed),
#these operations actually exist.


# Bracket [] represents an array
# We just can have one Query
type Query {
    findAllDogs: [Dog]!
    findDogById(id:ID): Dog!
}

# We just can have one Mutation
type Mutation {
    deleteDogBreed(breed:String!) : Boolean
    updateDogName(newName: String!, id:ID!) : Dog!
}